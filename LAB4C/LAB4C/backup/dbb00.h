//*****************************************************************************
//*****************************************************************************
//  FILENAME: DBB00.h
//   Version: 2.60, Updated on 2012/9/21 at 11:59:18
//  Generated by PSoC Designer 5.3.2710
//
//  DESCRIPTION: PWM8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef DBB00_INCLUDE
#define DBB00_INCLUDE

#include <m8c.h>

#pragma fastcall16 DBB00_EnableInt
#pragma fastcall16 DBB00_DisableInt
#pragma fastcall16 DBB00_Start
#pragma fastcall16 DBB00_Stop
#pragma fastcall16 DBB00_bReadCounter              // Read  DR0
#pragma fastcall16 DBB00_WritePeriod               // Write DR1
#pragma fastcall16 DBB00_bReadPulseWidth           // Read  DR2
#pragma fastcall16 DBB00_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bDBB00_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bDBB00_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the DBB00 API.
//-------------------------------------------------

extern void DBB00_EnableInt(void);                        // Proxy Class 1
extern void DBB00_DisableInt(void);                       // Proxy Class 1
extern void DBB00_Start(void);                            // Proxy Class 1
extern void DBB00_Stop(void);                             // Proxy Class 1
extern BYTE DBB00_bReadCounter(void);                     // Proxy Class 2
extern void DBB00_WritePeriod(BYTE bPeriod);              // Proxy Class 1
extern BYTE DBB00_bReadPulseWidth(void);                  // Proxy Class 1
extern void DBB00_WritePulseWidth(BYTE bPulseWidth);      // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bDBB00_ReadCounter(void);            // Deprecated
extern BYTE bDBB00_ReadPulseWidth(void);         // Deprecated


//--------------------------------------------------
// Constants for DBB00 API's.
//--------------------------------------------------

#define DBB00_CONTROL_REG_START_BIT            ( 0x01 )
#define DBB00_INT_REG_ADDR                     ( 0x0e1 )
#define DBB00_INT_MASK                         ( 0x01 )


//--------------------------------------------------
// Constants for DBB00 user defined values
//--------------------------------------------------

#define DBB00_PERIOD                           ( 0xff )
#define DBB00_PULSE_WIDTH                      ( 0xff )


//-------------------------------------------------
// Register Addresses for DBB00
//-------------------------------------------------

#pragma ioport  DBB00_COUNTER_REG:  0x020                  //DR0 Count register
BYTE            DBB00_COUNTER_REG;
#pragma ioport  DBB00_PERIOD_REG:   0x021                  //DR1 Period register
BYTE            DBB00_PERIOD_REG;
#pragma ioport  DBB00_COMPARE_REG:  0x022                  //DR2 Compare register
BYTE            DBB00_COMPARE_REG;
#pragma ioport  DBB00_CONTROL_REG:  0x023                  //Control register
BYTE            DBB00_CONTROL_REG;
#pragma ioport  DBB00_FUNC_REG: 0x120                      //Function register
BYTE            DBB00_FUNC_REG;
#pragma ioport  DBB00_INPUT_REG:    0x121                  //Input register
BYTE            DBB00_INPUT_REG;
#pragma ioport  DBB00_OUTPUT_REG:   0x122                  //Output register
BYTE            DBB00_OUTPUT_REG;
#pragma ioport  DBB00_INT_REG:       0x0e1                 //Interrupt Mask Register
BYTE            DBB00_INT_REG;


//-------------------------------------------------
// DBB00 Macro 'Functions'
//-------------------------------------------------

#define DBB00_Start_M \
   DBB00_CONTROL_REG |=  DBB00_CONTROL_REG_START_BIT

#define DBB00_Stop_M  \
   DBB00_CONTROL_REG &= ~DBB00_CONTROL_REG_START_BIT

#define DBB00_EnableInt_M   \
   M8C_EnableIntMask(DBB00_INT_REG, DBB00_INT_MASK)

#define DBB00_DisableInt_M  \
   M8C_DisableIntMask(DBB00_INT_REG, DBB00_INT_MASK)

#endif
// end of file DBB00.h
