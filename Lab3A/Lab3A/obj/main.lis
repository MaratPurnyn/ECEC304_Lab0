 0000                   cpu LMM
                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\msp72\DOCUME~1\GitHub\ECEC30~1\Lab3A\Lab3A\main.c
 0000                   .dbfunc e main _main fV
 0000           _main::
 0000                   .dbline -1
 0000                   .dbline 12
 0000           ; 
 0000           ; //----------------------------------------------------------------------------
 0000           ; // C main line
 0000           ; //----------------------------------------------------------------------------
 0000           ; 
 0000           ; #include <m8c.h>        // part specific constants and macros
 0000           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0000           ; #include "DBB00.h"
 0000           ; #include "PWM8a.h"
 0000           ; 
 0000           ; void main(void)
 0000           ; {
 0000                   .dbline 13
 0000           ; OSC_CR1 = 0x0F;       // Sets VC1 & VC2
 0000 7110              or F,0x10  ; iopage = 1
 0002 62E10F            mov REG[0xe1],15
 0005                   .dbline 14
 0005           ; OSC_CR3 = 0x02;       // Sets VC3 divider
 0005 62DF02            mov REG[0xdf],2
 0008                   .dbline 15
 0008           ; OSC_CR4 &= ~0x03; 
 0008 41DEFC            and REG[0xde],-4
 000B                   .dbline 16
 000B           ; OSC_CR4 |= 0x03;      // Sets VC3 Source
 000B 43DE03            or REG[0xde],3
 000E                   .dbline 17
 000E           ; DBB00_WritePeriod(0xFF);
 000E 10                push X
 000F 50FF              mov A,-1
 0011 70CF              and F,0xCF      ; iopage = 0
 0013 7C0000            xcall _DBB00_WritePeriod
 0016                   .dbline 18
 0016           ; DBB00_WritePulseWidth(0x20);
 0016 5020              mov A,32
 0018 7C0000            xcall _DBB00_WritePulseWidth
 001B                   .dbline 22
 001B           ;       // M8C_EnableGInt ; // Uncomment this line to enable Global Interrupts
 001B           ;       // Insert your main routine code here.
 001B           ;       
 001B           ;       DBB00_Start();
 001B 7C0000            xcall _DBB00_Start
 001E                   .dbline 23
 001E           ;       PWM8a_Start();
 001E 7C0000            xcall _PWM8a_Start
 0021 20                pop X
 0022           L2:
 0022                   .dbline 24
 0022           ;       while(1);
 0022           L3:
 0022                   .dbline 24
 0022 8FFF              xjmp L2
 0024           X0:
 0024                   .dbline -2
 0024           L1:
 0024                   .dbline 0 ; func end
 0024 8FFF              jmp .
 0026                   .dbend
